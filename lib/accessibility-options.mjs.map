{"version":3,"file":"accessibility-options.mjs","sources":["../src/lib/accessibility.js"],"sourcesContent":["class Accessbility {\r\n  constructor() {\r\n    this.$btnIncreaseFontSize = document.querySelector('[data-accessibility=\"font-increase\"]')\r\n    this.$btnDecreaseFontSize = document.querySelector('[data-accessibility=\"font-decrease\"]')\r\n    this.$btnContrast = document.querySelector('[data-accessibility=\"contrast\"]')\r\n    this.countIncrease = 0\r\n    this.defaultConfig = {}\r\n  }\r\n\r\n  init(config = null) {\r\n    this._setDefaultValues(config);\r\n    this._initEvents();\r\n    this._verifyContrast();\r\n  }\r\n\r\n  _setDefaultValues(config) {\r\n    this.defaultConfig = {\r\n      font: {\r\n        increment: config ? userConfig.fontIncrement : 2,\r\n        incrementLimit: config ? userConfig.fontIncrementLimit : 2\r\n      },\r\n      contrast: {\r\n        class: config ? userConfig.contrastClass : 'contrast-class'\r\n      }\r\n    }\r\n  }\r\n\r\n  _verifyContrast() {\r\n    if (localStorage.getItem('accessibility-contrast') === 'true') {\r\n      this._setContrast();\r\n    }\r\n  }\r\n\r\n  _initEvents() {\r\n    this.$btnIncreaseFontSize.addEventListener('click', this._increaseFontSize);\r\n    this.$btnDecreaseFontSize.addEventListener('click', this._decreaseFontSize);\r\n    this.$btnContrast.addEventListener('click', this._setContrast);\r\n  }\r\n\r\n  _toggleClass(element, classe) {\r\n    const $element = document.querySelector(element);\r\n    if ($element.classList.contains(classe)) {\r\n      $element.classList.remove(classe);\r\n    } else {\r\n      $element.classList.add(classe);\r\n    }\r\n  }\r\n\r\n  _getTextElements() {\r\n    return ['p', 'span', 'a', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'dt', 'dd', 'button', 'input[type=text]', 'input[type=button]', 'input[type=submit]', 'label'];\r\n  }\r\n\r\n  _adjustFontSize(operator) {\r\n    const textElements = this._getTextElements();\r\n    textElements.forEach((item) => {\r\n      const $elements = document.getElementsByTagName(item);\r\n      Array.prototype.forEach.call($elements, (element) => {\r\n        let elementFontSize = this._getElementFontSize(element);\r\n        if (operator === '+') {\r\n          elementFontSize += this.defaultConfig.font.increment;\r\n        } else if (operator === '-') {\r\n          elementFontSize -= this.defaultConfig.font.increment;\r\n        }\r\n        element.style.fontSize = elementFontSize + 'px';\r\n      });\r\n    });\r\n  }\r\n\r\n  _getElementFontSize(element) {\r\n    const elementFontSize = window.getComputedStyle(element, null).getPropertyValue('font-size');\r\n    return this._convertFontSizeToNumber(elementFontSize);\r\n  }\r\n\r\n  _convertFontSizeToNumber(string) {\r\n    // TODO: Garantir que a unidade seja pixel, caso nÃ£o seja converter para\r\n    const regex = /(?:\\d+\\.?(?:\\d+)?)/;\r\n    string = string.match(regex)[0];\r\n    string = Number(string);\r\n    return string;\r\n  }\r\n\r\n  _countFontIncrement(operator) {\r\n    if (operator === '+') {\r\n      this.countIncrease += 1;\r\n    } else {\r\n      this.countIncrease -= 1;\r\n    }\r\n    return this.countIncrease;\r\n  }\r\n\r\n  _increaseFontSize = () => {\r\n    if (this.countIncrease < this.defaultConfig.font.incrementLimit) {\r\n      this._adjustFontSize('+');\r\n      this._countFontIncrement('+')\r\n    }\r\n  }\r\n\r\n  _decreaseFontSize = () => {\r\n    const operator = '-';\r\n    if (this.countIncrease) {\r\n      this._adjustFontSize(operator);\r\n      this._countFontIncrement(operator);\r\n    }\r\n  }\r\n\r\n  _setContrast = () => {\r\n    const $body = document.body;\r\n    this._toggleClass('body', this.defaultConfig.contrast.class);\r\n    localStorage.setItem('accessibility-contrast', $body.classList.contains(this.defaultConfig.contrast.class));\r\n  }\r\n}\r\n\r\nexport default Accessbility;\r\n"],"names":["Accessbility","constructor","_increaseFontSize","this","countIncrease","defaultConfig","font","incrementLimit","_adjustFontSize","_countFontIncrement","_decreaseFontSize","_setContrast","$body","document","body","_toggleClass","contrast","class","setItem","classList","contains","$btnIncreaseFontSize","querySelector","$btnDecreaseFontSize","$btnContrast","init","config","_setDefaultValues","_initEvents","_verifyContrast","userConfig","fontIncrement","fontIncrementLimit","contrastClass","localStorage","getItem","addEventListener","element","classe","$element","remove","add","_getTextElements","operator","forEach","item","$elements","getElementsByTagName","Array","prototype","call","elementFontSize","_getElementFontSize","increment","style","fontSize","window","getComputedStyle","getPropertyValue","_convertFontSizeToNumber","string","match","Number"],"mappings":"AAAA,IAAMA,EACJC,2BAyFAC,6BACMC,EAAKC,cAAgBD,EAAKE,cAAcC,KAAKC,mBAC1CC,gBAAgB,OAChBC,oBAAoB,YAI7BC,6BAEMP,EAAKC,kBACFI,gBAFU,OAGVC,oBAHU,YAOnBE,4BACQC,EAAQC,SAASC,OAClBC,aAAa,OAAQZ,EAAKE,cAAcW,SAASC,oBACzCC,QAAQ,yBAA0BN,EAAMO,UAAUC,SAASjB,EAAKE,cAAcW,SAASC,cA1G/FI,qBAAuBR,SAASS,cAAc,6CAC9CC,qBAAuBV,SAASS,cAAc,6CAC9CE,aAAeX,SAASS,cAAc,wCACtClB,cAAgB,OAChBC,cAAgB,IAGvBoB,YAAAA,cAAKC,kBAAS,WACPC,kBAAkBD,QAClBE,mBACAC,mBAGPF,YAAAA,2BAAkBD,QACXrB,cAAgB,CACnBC,KAAM,WACOoB,EAASI,WAAWC,cAAgB,iBAC/BL,EAASI,WAAWE,mBAAqB,GAE3DhB,SAAU,OACDU,EAASI,WAAWG,cAAgB,oBAKjDJ,YAAAA,2BACyD,SAAnDK,aAAaC,QAAQ,gCAClBxB,gBAITiB,YAAAA,4BACOP,qBAAqBe,iBAAiB,QAASjC,KAAKD,wBACpDqB,qBAAqBa,iBAAiB,QAASjC,KAAKO,wBACpDc,aAAaY,iBAAiB,QAASjC,KAAKQ,eAGnDI,YAAAA,sBAAasB,EAASC,OACdC,EAAW1B,SAASS,cAAce,GACpCE,EAASpB,UAAUC,SAASkB,KACrBnB,UAAUqB,OAAOF,KAEjBnB,UAAUsB,IAAIH,IAI3BI,YAAAA,kCACS,CAAC,IAAK,OAAQ,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,SAAU,mBAAoB,qBAAsB,qBAAsB,UAG5JlC,YAAAA,yBAAgBmC,cACOxC,KAAKuC,mBACbE,iBAASC,OACdC,EAAYjC,SAASkC,qBAAqBF,GAChDG,MAAMC,UAAUL,QAAQM,KAAKJ,WAAYT,OACnCc,EAAkBhD,EAAKiD,oBAAoBf,GAC9B,MAAbM,KACiBxC,EAAKE,cAAcC,KAAK+C,UACrB,MAAbV,OACUxC,EAAKE,cAAcC,KAAK+C,aAErCC,MAAMC,SAAWJ,EAAkB,UAKjDC,YAAAA,6BAAoBf,OACZc,EAAkBK,OAAOC,iBAAiBpB,EAAS,MAAMqB,iBAAiB,oBACzEvD,KAAKwD,yBAAyBR,IAGvCQ,YAAAA,kCAAyBC,YAGdA,EAAOC,MADF,sBACe,GAC7BD,EAASE,OAAOF,IAIlBnD,YAAAA,6BAAoBkC,SACD,MAAbA,OACGvC,eAAiB,OAEjBA,eAAiB,EAEjBD,KAAKC"}